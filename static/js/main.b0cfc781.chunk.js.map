{"version":3,"sources":["Components/Loader.js","img/image.svg","Components/DragAndDropArea.js","Components/Button.js","Components/Uploaded.js","Components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["style","backgroundColor","height","borderRadius","Loader","LinearProgress","styles","box","width","margin","padding","background","border","boxSizing","paragraph","color","fontStyle","fontSize","Radium","setImage","setIsLoading","readFile","image","reader","FileReader","readAsDataURL","onloadend","formData","FormData","append","fetch","method","body","then","res","json","secure_url","catch","err","console","log","uploadImage","result","id","onDragEnter","e","stopPropagation","preventDefault","onDragOver","onDrop","dataTransfer","items","getAsFile","dodrop","src","alt","label","textAlign","lineHeight","cursor","input","display","htmlFor","type","accept","onChange","target","files","img","button","onClick","el","document","createElement","value","appendChild","select","execCommand","removeChild","div","boxShadow","fontFamily","p","Container","useState","isLoading","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0cfc781.chunk.js","sourcesContent":["\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\n\r\nconst style = {\r\n    backgroundColor: \"#cbcbcb\",\r\n    height: \"10px\",\r\n    borderRadius: \"8px\"\r\n}\r\n  \r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <h1>Uploading...</h1>\r\n      <LinearProgress style={style}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/image.3710b8a3.svg\";","import React from \"react\";\r\nimport image from \"../img/image.svg\";\r\nimport Radium from \"radium\";\r\n\r\nconst styles = {\r\n  box: {\r\n    width: \"338px\",\r\n    margin: \"auto\",\r\n    padding: \"20px\",\r\n    background: \"#F6F8FB\",\r\n    border: \"1px dashed #97BEF4\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: \"12px\",\r\n    \":hover\": {\r\n      border: \"2px solid #97BEF4\",\r\n    },\r\n  },\r\n  paragraph: {\r\n    color: \"#BDBDBD\",\r\n    fontStyle: \"Poppins\",\r\n    fontSize: \"12px\",\r\n  },\r\n};\r\n\r\nconst DragAndDropArea = ({ setImage, setIsLoading }) => {\r\n  const CLOUDINARY_UPLOAD_PRESET = \"pgk0nz6q\";\r\n  const CLOUDINARY_UPLOAD_URL =\r\n    \"https://api.cloudinary.com/v1_1/tynnacloud/upload\";\r\n\r\n  const uploadImage = image => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n    formData.append(\"upload_preset\", CLOUDINARY_UPLOAD_PRESET);\r\n    const options = {\r\n      method: \"POST\",\r\n      body: formData,\r\n    };\r\n    fetch(CLOUDINARY_UPLOAD_URL, options)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setImage(res.secure_url);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const readFile = image => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onloadend = () => {\r\n        uploadImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const dodrop = e => {\r\n    console.log(e.dataTransfer.items[0])\r\n    const image = e.dataTransfer.items[0].getAsFile();\r\n    readFile(image);\r\n  };\r\n\r\n  const handleDragEnter = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDragOver = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDrop = e => {\r\n    setIsLoading(true);\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    dodrop(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={styles.box}\r\n      id=\"output\"\r\n      onDragEnter={handleDragEnter}\r\n      onDragOver={handleDragOver}\r\n      onDrop={handleDrop}\r\n    >\r\n      <img src={image} alt=\"\" />\r\n      <p style={styles.paragraph}>Drag & Drop your image here</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Radium(DragAndDropArea);\r\n","import React from \"react\";\r\nimport Radium from \"radium\";\r\n\r\nconst style = {\r\n  label: {\r\n    padding: \"10px\",\r\n    margin: \"auto\",\r\n    fontStyle: \"Noto Sans\",\r\n    fontSize: \"12px\",\r\n    background: \"#2F80ED\",\r\n    borderRadius: \"8px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"31.98px\",\r\n    border: \"none\",\r\n    \":hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n};\r\n\r\nconst Button = ({ setImage, setIsLoading }) => {\r\n  const CLOUDINARY_UPLOAD_PRESET = \"pgk0nz6q\";\r\n  const CLOUDINARY_UPLOAD_URL =\r\n    \"https://api.cloudinary.com/v1_1/tynnacloud/upload\";\r\n\r\n  const uploadImage = image => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n    formData.append(\"upload_preset\", CLOUDINARY_UPLOAD_PRESET);\r\n    const options = {\r\n      method: \"POST\",\r\n      body: formData,\r\n    };\r\n    fetch(CLOUDINARY_UPLOAD_URL, options)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        setImage(res.secure_url);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const readFile = image => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(image);\r\n    reader.onloadend = () => {\r\n      uploadImage(reader.result);\r\n    };\r\n  };\r\n\r\n  const handleChange= e => {\r\n    setIsLoading(true);\r\n    const image = e.target.files[0];\r\n    readFile(image);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"upload\" style={style.label}>\r\n        Choose a file\r\n      </label>\r\n      <input\r\n        id=\"upload\"\r\n        type=\"file\"\r\n        accept=\"image/png, image/jpeg\"\r\n        style={style.input}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Radium(Button);\r\n","\r\nimport Radium from 'radium';\r\n\r\nconst style = {\r\n  img: {\r\n    width: \"100%\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  button: {\r\n    padding: \"10px\",\r\n    margin: \"auto\",\r\n    fontStyle: \"Noto Sans\",\r\n    fontSize: \"12px\",\r\n    background: \"#2F80ED\",\r\n    borderRadius: \"8px\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    border: \"none\",\r\n    ':hover': {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Uploaded = ({ image }) => {\r\n  const handleClick = () => {\r\n    const el = document.createElement(\"textarea\");\r\n    el.value = image;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(el);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Uploaded Successfully!</h1>\r\n      <img src={image} alt=\"\" style={style.img} />\r\n      <button style={style.button} onClick={handleClick}>\r\n        Copy Link\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Radium(Uploaded);\r\n","import React, { useState } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport DragAndDropArea from \"./DragAndDropArea\";\r\nimport Button from \"./Button\";\r\nimport Uploaded from \"./Uploaded\";\r\n\r\nconst style = {\r\n  div: {\r\n    width: \"50vw\",\r\n    height: \"auto\",\r\n    margin: \"15vh auto\",\r\n    padding: \"20px\",\r\n    borderRadius: \"12px\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"0px 4px 12px rgba(0, 0, 0, 0.5)\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    fontSize: \"18px\",\r\n    lineHeight: \"27px\",\r\n    color: \"#4F4F4F\"\r\n  },\r\n  p: {\r\n    fontSize: \"12px\",\r\n    color: \"#828282\"\r\n  }\r\n};\r\n\r\nconst Container = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n\r\n  return (\r\n    <div style={style.div}>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : image ? (\r\n        <Uploaded image={image}/>\r\n      ) : (\r\n        <>\r\n          <h1>Upload your image</h1>\r\n          <p style={style.p}>File should be Jpeg, Png,...</p>\r\n          <DragAndDropArea setIsLoading={setIsLoading} setImage={setImage} />\r\n          <p>Or</p>\r\n          <Button setIsLoading={setIsLoading} setImage={setImage}/>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import './App.css';\nimport Container from \"./Components/Container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}